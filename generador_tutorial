#!/bin/bash
#
#Requiere:
# - Git
# - Markdown

#Revisamos que las dependencias se cumplan satisfactoriamente
DEPENDENCIES="git markdown"
for dep in $DEPENDENCIES
do
	which $dep > /dev/null;
	if [ $? -ne 0 ]
	then
			echo -e "Dependencia incumplida ${dep}, favor de instalar";
			echo -e "sudo apt-get install ${dep}";
	fi
done;

#optenemos la ruta del repositorio
repo_path=$(git rev-parse --show-toplevel)

##########################################################################################
function index_ejemplos {
	echo 'Generando index de la ṕagina de ejemplos';
	ejemplos_path=`echo ${repo_path}/ejemplos/`;
		if [ -c "$ejemplos_path/index.md" ]
		then
			rm $ejemplos_path/index.md
		fi

		echo '# Lista de ejemplos disponibles' > $ejemplos_path/index.txt;
		echo '' >> $ejemplos_path/index.txt;

		for file in `find $repo_path/ejemplos/ -iregex ".*\.html$" | sort `;
		do
				f=`echo ${file} | sed "s|${ejemplos_path}||i"`;
				echo " - [\`${f}\`](./$f)" >> $ejemplos_path/index.txt;
		done;
		mv $ejemplos_path/index.txt $ejemplos_path/index.md;
}

##########################################################################################
# Imprime Temario.
##########################################################################################
function imprimeTemario {

	echo -e "# Manual de JQuery en español\n";
	echo '<img src="img/samurai_javascript.png" align="right" alt="el chaco samurai javascript" />';
	echo '';
	for i in {1..6}
	do
		 grep -ERhio "^<h[1-2]>(.*)</h[0-9]>" sesion0${i}/index.html | \
				sed -r "s/^<h([1-3]+)>(.*)<\/h[1-3]>/\1\2/" | sed -r "s/(\.|:)$//"  | \
				sed -r "s/^(1)(.*)/\1[**\2**](.\/sesion0${i}\/index.html)/" | \
				sed -r 's/^(2)(.*)/  - [\2]()/;s/^1/ - /';
	done
	grep -ERhio "^<h[1-3]>(.*)</h[0-9]>" recursos/index.html | \
				sed -r "s/^<h([1-3]+)>(.*)<\/h[1-3]>/\1\2/" | sed -r "s/(\.|:)$//"  | \
				sed -r "s/^(1)(.*)/\1[**\2**](.\/recursos\/index.html)/" | \
				sed -r 's/^2/  - /;s/^3/   - /;s/^1/ - /';
}
#Si no recibe ningún argumento, actualiza todo el directorio
if [ $# -ne 1 ]
then
  echo "Ejecución modo actualización general";
  echo "--------------------------------------------------------------------------------";
  #for file in `git diff --name-only | grep -E '\.md$' | sort `;
  for file in `find $repo_path -iregex ".*\.md$" | sort `;
  do
		$0 $file
	done;
	index_ejemplos;
	$0 $repo_path/ejemplos/index.md;
	imprimeTemario > $repo_path/index.md;
	$0 $repo_path/index.md;
	exit 0;
fi
#Revisamos que el archivo de entrada tenga la extensión adecuada.
(echo ${1} | grep -Evq '\.md$') && (echo "El documento de entrada ${1} debe tener la extension md"; exit 1 );
#generamos el nombre que tendra el archivo de salida
archivo_salida=`echo ${1} | sed 's/\.md$/.html/'`;
echo -e "\t${archivo_salida}";

LOCAL_NAME=$(echo ${archivo_salida} | sed "s|${repo_path}||");

#Optenemos la referencia local
aux_path_level=`echo ${1} | sed "s|${repo_path}||i" | xargs dirname`;
refPath='./';

while [ "${aux_path_level}" != "/" ]; do
	aux_path_level=`dirname $aux_path_level`;
	refPath=`echo ${refPath}../`;
done

USER=`eval whoami`
#generamos el titulo
TITLE=`markdown $1 | grep -Eo "<h1>.*</h1>" | head -1 | sed -r  "s/<h1>(.*)<\/h1>/\1/"`
##########################################################################################
#generando el archivo de salida.
##########################################################################################
#Cabecera Html
echo '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>' > $archivo_salida

#Titulo
echo "<title>$TITLE</title>" >>  $archivo_salida


#Seccion metadatos, css y javascript
echo "<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />
	<link rel=\"stylesheet\" type=\"text/css\" href=\"${refPath}css/style.css\" />
	<link rel='icon' type='image/png' href='${refPath}img/favicon.png' />
	<script type='text/javascript' src='${refPath}js/jquery-1.7.2.js'></script>
	<script type='text/javascript' src='${refPath}js/tabla_contenidos.js'></script>
	<script type='text/javascript'>var fileName='${LOCAL_NAME}';</script>
</head>
<body>
" >> $archivo_salida

#Titulo
echo "<title>$TITLE</title>" >>  $archivo_salida

#Seccion metadatos, css y javascript
cat "$repo_path/plantilla/cabecera.html" |\
sed  "s|%refPath%|$refPath|" >> $archivo_salida

#Generando el archivo en markdown
markdown $1 >> $archivo_salida

#Fin del content,Agregamos pie de pagina, finalmente cerramos el body y del documento html
cat "$repo_path/plantilla/pie_pagina.html"  >> $archivo_salida

#//firefox $archivo_salida &
